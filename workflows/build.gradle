plugins {
    id 'net.corda.plugins.quasar-utils'
    id 'net.corda.plugins.cordapp-cpk'
    id 'org.jetbrains.kotlin.jvm'
}

cordapp {
    targetPlatformVersion = cordaPlatformVersion.toInteger()
    workflow {
        name "Template Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation "net.corda.kotlin:kotlin-stdlib-jdk8-osgi:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "junit:junit:$junitVersion"

    // Corda dependencies.
    cordaProvided "$cordaReleaseGroup:corda-application:$cordaReleaseVersion"

    // CorDapp dependencies.
    cordapp project(":contracts")
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
